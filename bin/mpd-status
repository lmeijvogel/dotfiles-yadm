#!/usr/bin/env ruby

MPD_HOST = "192.168.2.5"
SEPARATOR = "-@*@%@*-"

require 'open3'

class HostNotAvailable < StandardError ; end

def query_mpd_status
  `ping -c 1 -W 1 -q #{MPD_HOST}`

  if !$?.success?
    raise HostNotAvailable, "Ping failed"
  end

  format = %w[albumartist artist title].map {|s| "%#{s}%"}.join(SEPARATOR)

  mpd_status, exit_status = Open3.capture2e(
    "mpc",
    "--host", MPD_HOST,
    "--format", format,
    "status"
  )

  if !exit_status.success?
    raise HostNotAvailable, "Could not contact service"
  end

  mpd_status.lines
end

def main
  mpd_status = query_mpd_status

  if mpd_status.length <= 1
    puts ""
    exit
  end

  description, song_status, _ = mpd_status

  playing_state, current, total = read_player_state(song_status)

  playing_mode = case playing_state
                 when "paused" then ""
                 when "playing" then ""
                 when "stopped" then puts ""; return
  end

  albumartist, artist, title = description.strip.split(SEPARATOR)

  title = truncate(title, 70)

  song_description = if albumartist == "Various Artists"
                       "#{artist} - #{title}"
                     else
                       title
                     end

  puts "#{playing_mode} #{song_description} (#{current}/#{total})"
rescue HostNotAvailable
  puts ""
end

def truncate(title, size)
  if title.length > size
    title[0..size - 3] + "..."
  else
    title
  end
end

def read_player_state(song_status)
  if song_status =~ /^ERROR:/
    return ["stopped"]
  end

  matches = song_status.match(%r{\[([^\]]+)\]\s+#(\d+)/(\d+)})

  matches[1, 3]
end

if ARGV.any?("--status-only")
  _, song_status, _ = query_mpd_status

  if song_status && song_status !~ /^ERROR/
    playing_state, _, _ = read_player_state(song_status)

    puts playing_state
  else
    puts "stopped"
  end
else
  main
end

# vim: set ft=ruby
